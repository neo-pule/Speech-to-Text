(function () {
  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  (self["webpackChunkionic_app_base"] = self["webpackChunkionic_app_base"] || []).push([["node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js"], {
    /***/
    1221:
    /*!*********************************************************************!*\
      !*** ./node_modules/@ionic/core/dist/esm/ion-breadcrumb_2.entry.js ***!
      \*********************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "ion_breadcrumb": function ion_breadcrumb() {
          return (
            /* binding */
            Breadcrumb
          );
        },

        /* harmony export */
        "ion_breadcrumbs": function ion_breadcrumbs() {
          return (
            /* binding */
            Breadcrumbs
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./index-06cd27b1.js */
      79633);
      /* harmony import */


      var _index_e2988509_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! ./index-e2988509.js */
      19313);
      /* harmony import */


      var _ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! ./ionic-global-a049bcbf.js */
      62964);
      /* harmony import */


      var _helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! ./helpers-eed79a2b.js */
      63874);
      /* harmony import */


      var _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! ./theme-a24ff1ad.js */
      55792);
      /*!
       * (C) Ionic http://ionicframework.com - MIT License
       */


      var breadcrumbIosCss = ":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:14px;margin-right:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumbs-collapsed-indicator{margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px}}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-850, #2d4665);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--color-active);--background-focused:var(--ion-color-step-50, rgba(233, 237, 243, 0.7))}:host(.breadcrumb-active){font-weight:600}.breadcrumb-native{border-radius:4px;padding-left:12px;padding-right:12px;padding-top:5px;padding-bottom:5px;border:1px solid transparent}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-native{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host(.ion-focused) .breadcrumb-native{border-radius:8px}:host(.in-breadcrumbs-color.ion-focused) .breadcrumb-native,:host(.ion-color.ion-focused) .breadcrumb-native{background:rgba(var(--ion-color-base-rgb), 0.1);color:var(--ion-color-base)}:host(.ion-focused) ::slotted(ion-icon),:host(.in-breadcrumbs-color.ion-focused) ::slotted(ion-icon),:host(.ion-color.ion-focused) ::slotted(ion-icon){color:var(--ion-color-step-750, #445b78)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-400, #92a0b3);font-size:18px}::slotted(ion-icon[slot=start]){margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}::slotted(ion-icon[slot=end]){margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #242d39)}.breadcrumbs-collapsed-indicator{border-radius:4px;background:var(--ion-color-step-100, #e9edf3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.45}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #d9e0ea)}";
      var breadcrumbMdCss = ":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:14px;margin-right:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumbs-collapsed-indicator{margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px}}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-600, #677483);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--ion-color-step-800, #35404e);--background-focused:$breadcrumb-md-background-focused}:host(.breadcrumb-active){font-weight:500}.breadcrumb-native{padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-native{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}.breadcrumb-separator{margin-left:10px;margin-right:10px;margin-top:-1px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-separator{margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px}}:host(.ion-focused) .breadcrumb-native{border-radius:4px;-webkit-box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12);box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-550, #7d8894);font-size:18px}::slotted(ion-icon[slot=start]){margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}::slotted(ion-icon[slot=end]){margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #222d3a)}.breadcrumbs-collapsed-indicator{border-radius:2px;background:var(--ion-color-step-100, #eef1f3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.7}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #dfe5e8)}";

      var Breadcrumb = /*#__PURE__*/function () {
        function Breadcrumb(hostRef) {
          var _this = this;

          _classCallCheck(this, Breadcrumb);

          (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
          this.ionFocus = (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionFocus", 7);
          this.ionBlur = (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionBlur", 7);
          this.collapsedClick = (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "collapsedClick", 7);
          this.inheritedAttributes = {};
          /** @internal */

          this.collapsed = false;
          /**
           * If `true`, the breadcrumb will take on a different look to show that
           * it is the currently active breadcrumb. Defaults to `true` for the
           * last breadcrumb if it is not set on any.
           */

          this.active = false;
          /**
           * If `true`, the user cannot interact with the breadcrumb.
           */

          this.disabled = false;
          /**
           * When using a router, it specifies the transition direction when navigating to
           * another page using `href`.
           */

          this.routerDirection = 'forward';

          this.onFocus = function () {
            _this.ionFocus.emit();
          };

          this.onBlur = function () {
            _this.ionBlur.emit();
          };

          this.collapsedIndicatorClick = function () {
            _this.collapsedClick.emit({
              ionShadowTarget: _this.collapsedRef
            });
          };
        }

        _createClass(Breadcrumb, [{
          key: "componentWillLoad",
          value: function componentWillLoad() {
            this.inheritedAttributes = (0, _helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_3__.i)(this.el, ['aria-label']);
          }
        }, {
          key: "isClickable",
          value: function isClickable() {
            return this.href !== undefined;
          }
        }, {
          key: "render",
          value: function render() {
            var _ref,
                _this2 = this;

            var color = this.color,
                active = this.active,
                collapsed = this.collapsed,
                disabled = this.disabled,
                download = this.download,
                el = this.el,
                inheritedAttributes = this.inheritedAttributes,
                last = this.last,
                routerAnimation = this.routerAnimation,
                routerDirection = this.routerDirection,
                separator = this.separator,
                showCollapsedIndicator = this.showCollapsedIndicator,
                target = this.target;
            var clickable = this.isClickable();
            var TagType = this.href === undefined ? 'span' : 'a'; // Links can still be tabbed to when set to disabled if they have an href
            // in order to truly disable them we can keep it as an anchor but remove the href

            var href = disabled ? undefined : this.href;
            var mode = (0, _ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_2__.b)(this);
            var attrs = TagType === 'span' ? {} : {
              download: download,
              href: href,
              target: target
            }; // If the breadcrumb is collapsed, check if it contains the collapsed indicator
            // to show the separator as long as it isn't also the last breadcrumb
            // otherwise if not collapsed use the value in separator

            var showSeparator = last ? false : collapsed ? showCollapsedIndicator && !last ? true : false : separator;
            return (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.H, {
              onClick: function onClick(ev) {
                return (0, _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_4__.o)(href, ev, routerDirection, routerAnimation);
              },
              "aria-disabled": disabled ? 'true' : null,
              "class": (0, _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_4__.c)(color, (_ref = {}, _defineProperty(_ref, mode, true), _defineProperty(_ref, 'breadcrumb-active', active), _defineProperty(_ref, 'breadcrumb-collapsed', collapsed), _defineProperty(_ref, 'breadcrumb-disabled', disabled), _defineProperty(_ref, 'in-breadcrumbs-color', (0, _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_4__.h)('ion-breadcrumbs[color]', el)), _defineProperty(_ref, 'in-toolbar', (0, _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_4__.h)('ion-toolbar', this.el)), _defineProperty(_ref, 'in-toolbar-color', (0, _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_4__.h)('ion-toolbar[color]', this.el)), _defineProperty(_ref, 'ion-activatable', clickable), _defineProperty(_ref, 'ion-focusable', clickable), _ref))
            }, (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)(TagType, Object.assign({}, attrs, {
              "class": "breadcrumb-native",
              part: "native",
              disabled: disabled,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }, inheritedAttributes), (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", {
              name: "start"
            }), (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null), (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", {
              name: "end"
            })), showCollapsedIndicator && (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("button", {
              part: "collapsed-indicator",
              onClick: function onClick() {
                return _this2.collapsedIndicatorClick();
              },
              ref: function ref(collapsedEl) {
                return _this2.collapsedRef = collapsedEl;
              },
              "class": {
                'breadcrumbs-collapsed-indicator': true
              }
            }, (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-icon", {
              icon: _index_e2988509_js__WEBPACK_IMPORTED_MODULE_1__.e,
              lazy: false
            })), showSeparator && (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", {
              "class": "breadcrumb-separator",
              part: "separator"
            }, (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", {
              name: "separator"
            }, mode === 'ios' ? (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("ion-icon", {
              icon: _index_e2988509_js__WEBPACK_IMPORTED_MODULE_1__.c,
              lazy: false
            }) : (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("span", null, "/"))));
          }
        }, {
          key: "el",
          get: function get() {
            return (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.i)(this);
          }
        }]);

        return Breadcrumb;
      }();

      Breadcrumb.style = {
        ios: breadcrumbIosCss,
        md: breadcrumbMdCss
      };
      var breadcrumbsIosCss = ":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){padding-left:20px;padding-right:20px;padding-top:0;padding-bottom:0;-ms-flex-pack:center;justify-content:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}";
      var breadcrumbsMdCss = ":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}";

      var Breadcrumbs = /*#__PURE__*/function () {
        function Breadcrumbs(hostRef) {
          var _this3 = this;

          _classCallCheck(this, Breadcrumbs);

          (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
          this.ionCollapsedClick = (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.e)(this, "ionCollapsedClick", 7);
          /**
           * The number of breadcrumbs to show before the collapsed indicator.
           * If this property exists `maxItems` will be ignored.
           */

          this.itemsBeforeCollapse = 1;
          /**
           * The number of breadcrumbs to show after the collapsed indicator.
           * If this property exists `maxItems` will be ignored.
           */

          this.itemsAfterCollapse = 1;

          this.breadcrumbsInit = function () {
            _this3.setBreadcrumbSeparator();

            _this3.setMaxItems();
          };

          this.resetActiveBreadcrumb = function () {
            var breadcrumbs = _this3.getBreadcrumbs(); // Only reset the active breadcrumb if we were the ones to change it
            // otherwise use the one set on the component


            var activeBreadcrumb = breadcrumbs.find(function (breadcrumb) {
              return breadcrumb.active;
            });

            if (activeBreadcrumb && _this3.activeChanged) {
              activeBreadcrumb.active = false;
            }
          };

          this.setMaxItems = function () {
            var itemsAfterCollapse = _this3.itemsAfterCollapse,
                itemsBeforeCollapse = _this3.itemsBeforeCollapse,
                maxItems = _this3.maxItems;

            var breadcrumbs = _this3.getBreadcrumbs();

            var _iterator = _createForOfIteratorHelper(breadcrumbs),
                _step;

            try {
              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                var breadcrumb = _step.value;
                breadcrumb.showCollapsedIndicator = false;
                breadcrumb.collapsed = false;
              } // If the number of breadcrumbs exceeds the maximum number of items
              // that should show and the items before / after collapse do not
              // exceed the maximum items then we need to collapse the breadcrumbs

            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }

            var shouldCollapse = maxItems !== undefined && breadcrumbs.length > maxItems && itemsBeforeCollapse + itemsAfterCollapse <= maxItems;

            if (shouldCollapse) {
              // Show the collapsed indicator in the first breadcrumb that collapses
              breadcrumbs.forEach(function (breadcrumb, index) {
                if (index === itemsBeforeCollapse) {
                  breadcrumb.showCollapsedIndicator = true;
                } // Collapse all breadcrumbs that have an index greater than or equal to
                // the number before collapse and an index less than the total number
                // of breadcrumbs minus the items that should show after the collapse


                if (index >= itemsBeforeCollapse && index < breadcrumbs.length - itemsAfterCollapse) {
                  breadcrumb.collapsed = true;
                }
              });
            }
          };

          this.setBreadcrumbSeparator = function () {
            var itemsAfterCollapse = _this3.itemsAfterCollapse,
                itemsBeforeCollapse = _this3.itemsBeforeCollapse,
                maxItems = _this3.maxItems;

            var breadcrumbs = _this3.getBreadcrumbs(); // Check if an active breadcrumb exists already


            var active = breadcrumbs.find(function (breadcrumb) {
              return breadcrumb.active;
            }); // Set the separator on all but the last breadcrumb

            var _iterator2 = _createForOfIteratorHelper(breadcrumbs),
                _step2;

            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                var breadcrumb = _step2.value;
                // The only time the last breadcrumb changes is when
                // itemsAfterCollapse is set to 0, in this case the
                // last breadcrumb will be the collapsed indicator
                var last = maxItems !== undefined && itemsAfterCollapse === 0 ? breadcrumb === breadcrumbs[itemsBeforeCollapse] : breadcrumb === breadcrumbs[breadcrumbs.length - 1];
                breadcrumb.last = last; // If the breadcrumb has defined whether or not to show the
                // separator then use that value, otherwise check if it's the
                // last breadcrumb

                var separator = breadcrumb.separator !== undefined ? breadcrumb.separator : last ? undefined : true;
                breadcrumb.separator = separator; // If there is not an active breadcrumb already
                // set the last one to active

                if (!active && last) {
                  breadcrumb.active = true;
                  _this3.activeChanged = true;
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
          };

          this.getBreadcrumbs = function () {
            return Array.from(_this3.el.querySelectorAll('ion-breadcrumb'));
          };
        }

        _createClass(Breadcrumbs, [{
          key: "onCollapsedClick",
          value: function onCollapsedClick(ev) {
            var breadcrumbs = this.getBreadcrumbs();
            var collapsedBreadcrumbs = breadcrumbs.filter(function (breadcrumb) {
              return breadcrumb.collapsed;
            });
            this.ionCollapsedClick.emit(Object.assign(Object.assign({}, ev.detail), {
              collapsedBreadcrumbs: collapsedBreadcrumbs
            }));
          }
        }, {
          key: "maxItemsChanged",
          value: function maxItemsChanged() {
            this.resetActiveBreadcrumb();
            this.breadcrumbsInit();
          }
        }, {
          key: "componentWillLoad",
          value: function componentWillLoad() {
            this.breadcrumbsInit();
          }
        }, {
          key: "render",
          value: function render() {
            var _ref2;

            var color = this.color,
                collapsed = this.collapsed;
            var mode = (0, _ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_2__.b)(this);
            return (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.H, {
              "class": (0, _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_4__.c)(color, (_ref2 = {}, _defineProperty(_ref2, mode, true), _defineProperty(_ref2, 'in-toolbar', (0, _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_4__.h)('ion-toolbar', this.el)), _defineProperty(_ref2, 'in-toolbar-color', (0, _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_4__.h)('ion-toolbar[color]', this.el)), _defineProperty(_ref2, 'breadcrumbs-collapsed', collapsed), _ref2))
            }, (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null));
          }
        }, {
          key: "el",
          get: function get() {
            return (0, _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_0__.i)(this);
          }
        }], [{
          key: "watchers",
          get: function get() {
            return {
              "maxItems": ["maxItemsChanged"],
              "itemsBeforeCollapse": ["maxItemsChanged"],
              "itemsAfterCollapse": ["maxItemsChanged"]
            };
          }
        }]);

        return Breadcrumbs;
      }();

      Breadcrumbs.style = {
        ios: breadcrumbsIosCss,
        md: breadcrumbsMdCss
      };
      /***/
    }
  }]);
})();
//# sourceMappingURL=node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js-es5.js.map