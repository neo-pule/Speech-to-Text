{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-picker-column-internal.entry.js"],"names":["pickerColumnInternalIosCss","pickerColumnInternalMdCss","PickerColumnInternal","hostRef","r","ionChange","hapticsStarted","isColumnVisible","isActive","items","color","numericInput","centerPickerItemInView","target","smooth","el","scroll","top","offsetTop","clientHeight","left","behavior","undefined","inputModeChange","ev","detail","useInputMode","inputModeColumn","isColumnActive","initializeScrollListener","timeout","activeEl","activeItem","scrollCallback","clearTimeout","bbox","getBoundingClientRect","centerX","x","width","centerY","y","height","activeElement","shadowRoot","elementFromPoint","classList","remove","PICKER_COL_ACTIVE","add","setTimeout","dataIndex","getAttribute","index","parseInt","selectedItem","value","h","addEventListener","destroyScrollListener","removeEventListener","scrollActiveItemIntoView","findItem","find","item","emit","visibleCallback","entries","_a","isIntersecting","oldActive","g","querySelector","IntersectionObserver","threshold","observe","parentEl","closest","mode","H","tabindex","c","map","onClick","text","style","ios","md"],"mappings":"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","file":"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js-es5.js","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-06cd27b1.js';\nimport { b as getIonMode } from './ionic-global-a049bcbf.js';\nimport { r as raf, g as getElementRoot } from './helpers-eed79a2b.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic-9a9aa7ec.js';\nimport { c as createColorClasses } from './theme-a24ff1ad.js';\n\nconst pickerColumnInternalIosCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}\";\n\nconst pickerColumnInternalMdCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .picker-item-active{color:var(--ion-color-base)}\";\n\nlet PickerColumnInternal = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.hapticsStarted = false;\n    this.isColumnVisible = false;\n    this.isActive = false;\n    /**\n     * A list of options to be displayed in the picker\n     */\n    this.items = [];\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * If `true`, tapping the picker will\n     * reveal a number input keyboard that lets\n     * the user type in values for each picker\n     * column. This is useful when working\n     * with time pickers.\n     *\n     * @internal\n     */\n    this.numericInput = false;\n    this.centerPickerItemInView = (target, smooth = true) => {\n      this.el.scroll({\n        // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)\n        top: target.offsetTop - (3 * target.clientHeight) + (target.clientHeight / 2),\n        left: 0,\n        behavior: smooth ? 'smooth' : undefined\n      });\n    };\n    /**\n     * When ionInputModeChange is emitted, each column\n     * needs to check if it is the one being made available\n     * for text entry.\n     */\n    this.inputModeChange = (ev) => {\n      if (!this.numericInput) {\n        return;\n      }\n      const { useInputMode, inputModeColumn } = ev.detail;\n      /**\n       * If inputModeColumn is undefined then this means\n       * all numericInput columns are being selected.\n       */\n      const isColumnActive = inputModeColumn === undefined || inputModeColumn === this.el;\n      if (!useInputMode || !isColumnActive) {\n        this.isActive = false;\n        return;\n      }\n      this.isActive = true;\n    };\n    /**\n     * When the column scrolls, the component\n     * needs to determine which item is centered\n     * in the view and will emit an ionChange with\n     * the item object.\n     */\n    this.initializeScrollListener = () => {\n      const { el } = this;\n      let timeout;\n      let activeEl = this.activeItem;\n      const scrollCallback = () => {\n        raf(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n          }\n          if (!this.hapticsStarted) {\n            hapticSelectionStart();\n            this.hapticsStarted = true;\n          }\n          /**\n           * Select item in the center of the column\n           * which is the month/year that we want to select\n           */\n          const bbox = el.getBoundingClientRect();\n          const centerX = bbox.x + (bbox.width / 2);\n          const centerY = bbox.y + (bbox.height / 2);\n          const activeElement = el.shadowRoot.elementFromPoint(centerX, centerY);\n          if (activeEl !== null) {\n            activeEl.classList.remove(PICKER_COL_ACTIVE);\n          }\n          /**\n           * If we are selecting a new value,\n           * we need to run haptics again.\n           */\n          if (activeElement !== activeEl) {\n            hapticSelectionChanged();\n          }\n          activeEl = activeElement;\n          activeElement.classList.add(PICKER_COL_ACTIVE);\n          timeout = setTimeout(() => {\n            const dataIndex = activeElement.getAttribute('data-index');\n            /**\n             * If no value it is\n             * possible we hit one of the\n             * empty padding columns.\n             */\n            if (dataIndex === null) {\n              return;\n            }\n            const index = parseInt(dataIndex, 10);\n            const selectedItem = this.items[index];\n            if (selectedItem.value !== this.value) {\n              this.value = selectedItem.value;\n              hapticSelectionEnd();\n              this.hapticsStarted = false;\n            }\n          }, 250);\n        });\n      };\n      /**\n       * Wrap this in an raf so that the scroll callback\n       * does not fire when component is initially shown.\n       */\n      raf(() => {\n        el.addEventListener('scroll', scrollCallback);\n        this.destroyScrollListener = () => {\n          el.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n  }\n  valueChange() {\n    if (this.isColumnVisible) {\n      /**\n       * Only scroll the active item into view and emit the value\n       * change, when the picker column is actively visible to the user.\n       */\n      const { items, value } = this;\n      this.scrollActiveItemIntoView();\n      const findItem = items.find(item => item.value === value);\n      if (findItem) {\n        this.ionChange.emit(findItem);\n      }\n    }\n  }\n  /**\n   * Only setup scroll listeners\n   * when the picker is visible, otherwise\n   * the container will have a scroll\n   * height of 0px.\n   */\n  componentWillLoad() {\n    const visibleCallback = (entries) => {\n      var _a;\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        /**\n         * Because this initial call to scrollActiveItemIntoView has to fire before\n         * the scroll listener is set up, we need to manage the active class manually.\n         */\n        const oldActive = getElementRoot(this.el).querySelector(`.${PICKER_COL_ACTIVE}`);\n        oldActive === null || oldActive === void 0 ? void 0 : oldActive.classList.remove(PICKER_COL_ACTIVE);\n        this.scrollActiveItemIntoView();\n        (_a = this.activeItem) === null || _a === void 0 ? void 0 : _a.classList.add(PICKER_COL_ACTIVE);\n        this.initializeScrollListener();\n        this.isColumnVisible = true;\n      }\n      else {\n        if (this.destroyScrollListener) {\n          this.destroyScrollListener();\n          this.destroyScrollListener = undefined;\n        }\n        this.isColumnVisible = false;\n      }\n    };\n    new IntersectionObserver(visibleCallback, { threshold: 0.01 }).observe(this.el);\n    const parentEl = this.el.closest('ion-picker-internal');\n    if (parentEl !== null) {\n      parentEl.addEventListener('ionInputModeChange', (ev) => this.inputModeChange(ev));\n    }\n  }\n  scrollActiveItemIntoView() {\n    const activeEl = this.activeItem;\n    if (activeEl) {\n      this.centerPickerItemInView(activeEl, false);\n    }\n  }\n  get activeItem() {\n    return getElementRoot(this.el).querySelector(`.picker-item[data-value=\"${this.value}\"]`);\n  }\n  render() {\n    const { items, color, isActive, numericInput } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { tabindex: 0, class: createColorClasses(color, {\n        [mode]: true,\n        ['picker-column-active']: isActive,\n        ['picker-column-numeric-input']: numericInput\n      }) }, h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), items.map((item, index) => {\n      return (h(\"div\", { class: \"picker-item\", \"data-value\": item.value, \"data-index\": index, onClick: (ev) => {\n          this.centerPickerItemInView(ev.target);\n        } }, item.text));\n    }), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\")));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChange\"]\n  }; }\n};\nconst PICKER_COL_ACTIVE = 'picker-item-active';\nPickerColumnInternal.style = {\n  ios: pickerColumnInternalIosCss,\n  md: pickerColumnInternalMdCss\n};\n\nexport { PickerColumnInternal as ion_picker_column_internal };\n"]}