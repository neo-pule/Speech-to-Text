{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-accordion_2.entry.js"],"names":["accordionIosCss","accordionMdCss","Accordion","hostRef","r","updateListener","updateState","state","isNext","isPrevious","value","accordionIds","disabled","readonly","toggleIcon","toggleIconSlot","setItemDefaults","ionItem","getSlottedHeaderIonItem","button","detail","lines","undefined","headerEl","slot","querySelector","assignedElements","find","el","tagName","setAria","expanded","root","g","setAttribute","slotToggleIcon","existingToggleIcon","iconEl","document","createElement","lazy","classList","add","icon","appendChild","expandAccordion","initialUpdate","contentEl","contentElWrapper","currentRaf","cancelAnimationFrame","shouldAnimate","contentHeight","offsetHeight","waitForTransition","t","style","setProperty","removeProperty","collapseAccordion","window","prefersReducedMotion","matchMedia","matches","animated","c","accordionGroupEl","accordionGroup","accordionValue","shouldExpand","Array","isArray","includes","nextAccordion","getNextSibling","nextAccordionValue","previousAccordion","getPreviousSibling","previousAccordionValue","nextSibling","nextElementSibling","previousSibling","previousElementSibling","closest","a","expand","requestAccordionToggle","mode","headerPart","contentPart","h","H","onClick","toggleExpanded","id","part","ref","name","role","ios","md","accordionGroupIosCss","accordionGroupMdCss","AccordionGroup","ionChange","multiple","emit","getAccordions","accordions","accordion","ev","activeElement","accordionEl","closestGroup","startingIndex","findIndex","key","findNextAccordion","findPreviousAccordion","length","focus","disabledChanged","readonlyChanged","accordionExpand","groupValue","processedValue","valueExists","v","filter","prevAccordion","from","querySelectorAll"],"mappings":"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","file":"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js-es5.js","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-06cd27b1.js';\nimport { c as config, b as getIonMode } from './ionic-global-a049bcbf.js';\nimport { r as raf, t as transitionEndAsync, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers-eed79a2b.js';\n\nconst accordionIosCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}:host(.accordion-next) ::slotted(ion-item[slot=header]){--border-width:0.55px 0px 0.55px 0px}\";\n\nconst accordionMdCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}\";\n\nlet Accordion = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.updateListener = () => this.updateState(false);\n    this.state = 1 /* Collapsed */;\n    this.isNext = false;\n    this.isPrevious = false;\n    /**\n     * The value of the accordion. Defaults to an autogenerated\n     * value.\n     */\n    this.value = `ion-accordion-${accordionIds++}`;\n    /**\n     * If `true`, the accordion cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * The toggle icon to use. This icon will be\n     * rotated when the accordion is expanded\n     * or collapsed.\n     */\n    this.toggleIcon = 'chevron-down';\n    /**\n     * The slot inside of `ion-item` to\n     * place the toggle icon. Defaults to `'end'`.\n     */\n    this.toggleIconSlot = 'end';\n    this.setItemDefaults = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * For a11y purposes, we make\n       * the ion-item a button so users\n       * can tab to it and use keyboard\n       * navigation to get around.\n       */\n      ionItem.button = true;\n      ionItem.detail = false;\n      /**\n       * By default, the lines in an\n       * item should be full here, but\n       * only do that if a user has\n       * not explicitly overridden them\n       */\n      if (ionItem.lines === undefined) {\n        ionItem.lines = 'full';\n      }\n    };\n    this.getSlottedHeaderIonItem = () => {\n      const { headerEl } = this;\n      if (!headerEl) {\n        return;\n      }\n      /**\n       * Get the first ion-item\n       * slotted in the header slot\n       */\n      const slot = headerEl.querySelector('slot');\n      if (!slot) {\n        return;\n      }\n      // This is not defined in unit tests\n      const ionItem = slot.assignedElements && slot.assignedElements().find(el => el.tagName === 'ION-ITEM');\n      return ionItem;\n    };\n    this.setAria = (expanded = false) => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * Get the native <button> element inside of\n       * ion-item because that is what will be focused\n       */\n      const root = getElementRoot(ionItem);\n      const button = root.querySelector('button');\n      if (!button) {\n        return;\n      }\n      button.setAttribute('aria-expanded', `${expanded}`);\n    };\n    this.slotToggleIcon = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      const { toggleIconSlot, toggleIcon } = this;\n      /**\n       * Check if there already is a toggle icon.\n       * If so, do not add another one.\n       */\n      const existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\n      if (existingToggleIcon) {\n        return;\n      }\n      const iconEl = document.createElement('ion-icon');\n      iconEl.slot = toggleIconSlot;\n      iconEl.lazy = false;\n      iconEl.classList.add('ion-accordion-toggle-icon');\n      iconEl.icon = toggleIcon;\n      iconEl.setAttribute('aria-hidden', 'true');\n      ionItem.appendChild(iconEl);\n    };\n    this.expandAccordion = (initialUpdate = false) => {\n      if (initialUpdate) {\n        this.state = 4 /* Expanded */;\n        return;\n      }\n      if (this.state === 4 /* Expanded */) {\n        return;\n      }\n      const { contentEl, contentElWrapper } = this;\n      if (contentEl === undefined || contentElWrapper === undefined) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        raf(() => {\n          this.state = 8 /* Expanding */;\n          this.currentRaf = raf(async () => {\n            const contentHeight = contentElWrapper.offsetHeight;\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            contentEl.style.setProperty('max-height', `${contentHeight}px`);\n            await waitForTransition;\n            this.state = 4 /* Expanded */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 4 /* Expanded */;\n      }\n    };\n    this.collapseAccordion = (initialUpdate = false) => {\n      if (initialUpdate) {\n        this.state = 1 /* Collapsed */;\n        return;\n      }\n      if (this.state === 1 /* Collapsed */) {\n        return;\n      }\n      const { contentEl } = this;\n      if (contentEl === undefined) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        this.currentRaf = raf(async () => {\n          const contentHeight = contentEl.offsetHeight;\n          contentEl.style.setProperty('max-height', `${contentHeight}px`);\n          raf(async () => {\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            this.state = 2 /* Collapsing */;\n            await waitForTransition;\n            this.state = 1 /* Collapsed */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 1 /* Collapsed */;\n      }\n    };\n    /**\n     * Helper function to determine if\n     * something should animate.\n     * If prefers-reduced-motion is set\n     * then we should not animate, regardless\n     * of what is set in the config.\n     */\n    this.shouldAnimate = () => {\n      if (typeof window === 'undefined') {\n        return false;\n      }\n      const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\n      if (prefersReducedMotion) {\n        return false;\n      }\n      const animated = config.get('animated', true);\n      if (!animated) {\n        return false;\n      }\n      if (this.accordionGroupEl && !this.accordionGroupEl.animated) {\n        return false;\n      }\n      return true;\n    };\n    this.updateState = async (initialUpdate = false) => {\n      const accordionGroup = this.accordionGroupEl;\n      const accordionValue = this.value;\n      if (!accordionGroup) {\n        return;\n      }\n      const value = accordionGroup.value;\n      const shouldExpand = (Array.isArray(value)) ? value.includes(accordionValue) : value === accordionValue;\n      if (shouldExpand) {\n        this.expandAccordion(initialUpdate);\n        this.isNext = this.isPrevious = false;\n      }\n      else {\n        this.collapseAccordion(initialUpdate);\n        /**\n         * When using popout or inset,\n         * the collapsed accordion items\n         * may need additional border radius\n         * applied. Check to see if the\n         * next or previous accordion is selected.\n         */\n        const nextAccordion = this.getNextSibling();\n        const nextAccordionValue = nextAccordion && nextAccordion.value;\n        if (nextAccordionValue !== undefined) {\n          this.isPrevious = (Array.isArray(value)) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\n        }\n        const previousAccordion = this.getPreviousSibling();\n        const previousAccordionValue = previousAccordion && previousAccordion.value;\n        if (previousAccordionValue !== undefined) {\n          this.isNext = (Array.isArray(value)) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\n        }\n      }\n    };\n    this.getNextSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const nextSibling = this.el.nextElementSibling;\n      if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return nextSibling;\n    };\n    this.getPreviousSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const previousSibling = this.el.previousElementSibling;\n      if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return previousSibling;\n    };\n  }\n  connectedCallback() {\n    const accordionGroupEl = this.accordionGroupEl = this.el && this.el.closest('ion-accordion-group');\n    if (accordionGroupEl) {\n      this.updateState(true);\n      addEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n  disconnectedCallback() {\n    const accordionGroupEl = this.accordionGroupEl;\n    if (accordionGroupEl) {\n      removeEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n  componentDidLoad() {\n    this.setItemDefaults();\n    this.slotToggleIcon();\n    /**\n     * We need to wait a tick because we\n     * just set ionItem.button = true and\n     * the button has not have been rendered yet.\n     */\n    raf(() => {\n      /**\n       * Set aria label on button inside of ion-item\n       * once the inner content has been rendered.\n       */\n      const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n      this.setAria(expanded);\n    });\n  }\n  toggleExpanded() {\n    const { accordionGroupEl, value, state } = this;\n    if (accordionGroupEl) {\n      /**\n       * Because the accordion group may or may\n       * not allow multiple accordions open, we\n       * need to request the toggling of this\n       * accordion and the accordion group will\n       * make the decision on whether or not\n       * to allow it.\n       */\n      const expand = state === 1 /* Collapsed */ || state === 2 /* Collapsing */;\n      accordionGroupEl.requestAccordionToggle(value, expand);\n    }\n  }\n  render() {\n    const { disabled, readonly } = this;\n    const mode = getIonMode(this);\n    const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n    const headerPart = expanded ? 'header expanded' : 'header';\n    const contentPart = expanded ? 'content expanded' : 'content';\n    this.setAria(expanded);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-expanding': this.state === 8 /* Expanding */,\n        'accordion-expanded': this.state === 4 /* Expanded */,\n        'accordion-collapsing': this.state === 2 /* Collapsing */,\n        'accordion-collapsed': this.state === 1 /* Collapsed */,\n        'accordion-next': this.isNext,\n        'accordion-previous': this.isPrevious,\n        'accordion-disabled': disabled,\n        'accordion-readonly': readonly,\n        'accordion-animated': config.getBoolean('animated', true)\n      } }, h(\"div\", { onClick: () => this.toggleExpanded(), id: \"header\", part: headerPart, \"aria-controls\": \"content\", ref: headerEl => this.headerEl = headerEl }, h(\"slot\", { name: \"header\" })), h(\"div\", { id: \"content\", part: contentPart, role: \"region\", \"aria-labelledby\": \"header\", ref: contentEl => this.contentEl = contentEl }, h(\"div\", { id: \"content-wrapper\", ref: contentElWrapper => this.contentElWrapper = contentElWrapper }, h(\"slot\", { name: \"content\" })))));\n  }\n  static get delegatesFocus() { return true; }\n  get el() { return getElement(this); }\n};\nlet accordionIds = 0;\nAccordion.style = {\n  ios: accordionIosCss,\n  md: accordionMdCss\n};\n\nconst accordionGroupIosCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){border-bottom:none}\";\n\nconst accordionGroupMdCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion){-webkit-box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){margin-left:0;margin-right:0;margin-top:16px;margin-bottom:16px;border-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\n\nlet AccordionGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    /**\n     * If `true`, all accordions inside of the\n     * accordion group will animate when expanding\n     * or collapsing.\n     */\n    this.animated = true;\n    /**\n     * If `true`, the accordion group cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion group cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * Describes the expansion behavior for each accordion.\n     * Possible values are `\"compact\"` and `\"inset\"`.\n     * Defaults to `\"compact\"`.\n     */\n    this.expand = 'compact';\n  }\n  valueChanged() {\n    const { value, multiple } = this;\n    /**\n     * If accordion group does not\n     * let multiple accordions be open\n     * at once, but user passes an array\n     * just grab the first value.\n     */\n    if (!multiple && Array.isArray(value)) {\n      this.value = value[0];\n    }\n    else {\n      this.ionChange.emit({ value: this.value });\n    }\n  }\n  async disabledChanged() {\n    const { disabled } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.disabled = disabled;\n    }\n  }\n  async readonlyChanged() {\n    const { readonly } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.readonly = readonly;\n    }\n  }\n  async onKeydown(ev) {\n    const activeElement = document.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    const accordionEl = (activeElement.tagName === 'ION-ACCORDION') ? activeElement : activeElement.closest('ion-accordion');\n    if (!accordionEl) {\n      return;\n    }\n    const closestGroup = accordionEl.closest('ion-accordion-group');\n    if (closestGroup !== this.el) {\n      return;\n    }\n    // If the active accordion is not in the current array of accordions, do not do anything\n    const accordions = await this.getAccordions();\n    const startingIndex = accordions.findIndex(a => a === accordionEl);\n    if (startingIndex === -1) {\n      return;\n    }\n    let accordion;\n    if (ev.key === 'ArrowDown') {\n      accordion = this.findNextAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'ArrowUp') {\n      accordion = this.findPreviousAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'Home') {\n      accordion = accordions[0];\n    }\n    else if (ev.key === 'End') {\n      accordion = accordions[accordions.length - 1];\n    }\n    if (accordion !== undefined && accordion !== activeElement) {\n      accordion.focus();\n    }\n  }\n  async componentDidLoad() {\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    if (this.readonly) {\n      this.readonlyChanged();\n    }\n  }\n  /**\n   * @internal\n   */\n  async requestAccordionToggle(accordionValue, accordionExpand) {\n    const { multiple, value, readonly, disabled } = this;\n    if (readonly || disabled) {\n      return;\n    }\n    if (accordionExpand) {\n      /**\n       * If group accepts multiple values\n       * check to see if value is already in\n       * in values array. If not, add it\n       * to the array.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        const valueExists = processedValue.find(v => v === accordionValue);\n        if (valueExists === undefined && accordionValue !== undefined) {\n          this.value = [...processedValue, accordionValue];\n        }\n      }\n      else {\n        this.value = accordionValue;\n      }\n    }\n    else {\n      /**\n       * If collapsing accordion, either filter the value\n       * out of the values array or unset the value.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        this.value = processedValue.filter(v => v !== accordionValue);\n      }\n      else {\n        this.value = undefined;\n      }\n    }\n  }\n  findNextAccordion(accordions, startingIndex) {\n    const nextAccordion = accordions[startingIndex + 1];\n    // tslint:disable-next-line:strict-type-predicates\n    if (nextAccordion === undefined) {\n      return accordions[0];\n    }\n    return nextAccordion;\n  }\n  findPreviousAccordion(accordions, startingIndex) {\n    const prevAccordion = accordions[startingIndex - 1];\n    // tslint:disable-next-line:strict-type-predicates\n    if (prevAccordion === undefined) {\n      return accordions[accordions.length - 1];\n    }\n    return prevAccordion;\n  }\n  /**\n   * @internal\n   */\n  async getAccordions() {\n    return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\n  }\n  render() {\n    const { disabled, readonly, expand } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-group-disabled': disabled,\n        'accordion-group-readonly': readonly,\n        [`accordion-group-expand-${expand}`]: true\n      }, role: \"presentation\" }, h(\"slot\", null)));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"readonly\": [\"readonlyChanged\"]\n  }; }\n};\nAccordionGroup.style = {\n  ios: accordionGroupIosCss,\n  md: accordionGroupMdCss\n};\n\nexport { Accordion as ion_accordion, AccordionGroup as ion_accordion_group };\n"]}